# -*- coding: utf-8 -*-
"""LVADSUSR181-rituraj-anand-Python-FA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GgCgvPkj4JRcP9x0AZuHQO4sAkBBQcrQ

Final Assessment
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
# split, hsplit, vsplit, flatten(), np.concatenate() , arr[1:3]- slicing


data = pd.read_csv('/content/IPL.csv')


df = pd.DataFrame(data)
print(df.head().to_string())

df.info()

#2
print(df.isnull().sum().to_string)

# Check for duplicates
print(df.duplicated().sum())

# Drop duplicates
df.drop_duplicates(inplace=True)

"""**As we can see, there are neither NaN values nor any duplicates, which makes the dataset fit for analysis.**"""

#3
numerical_df = pd.DataFrame([df['highscore'],df['margin']])


#Mean

print("Mean\n",np.mean(numerical_df))


# Median
print("Median",np.median(numerical_df))

# Mode
print("Mode",(numerical_df).mode())

# Variance
print("Variance",np.var(numerical_df))

# Standard Deviation
print("Standard Deviation",np.std(numerical_df))


df.describe()

"""**In the describe() function, we can see almost all the stats of our dataset.**"""

df.head()

#4
sns.lineplot(y=df['second_ings_score'], x=df['second_ings_wkts'],hue='won_by',data=df)

df.groupby('venue').size().plot(kind='barh', color=sns.palettes.mpl_palette('Dark2'))

"""**Number of matches played in stadiums can be seen**"""

#5 Correlation Matrix
df_numeric = df.select_dtypes(include=['int64', 'float64'])
corr_matrix = df_numeric.corr()
sns.heatmap(corr_matrix, annot=True)
plt.title('Correlation Matrix')
plt.show()

#6
# Box plot for outlier detection
sns.lineplot(y=df['first_ings_score'], x=df['first_ings_wkts'])
plt.title('fall of wickets in first Inning')
plt.show()
import numpy as np

#outliers
# z-score = (x_i - mean(x))/std(x)

def zscore(data):
  mean = np.mean(data)
  std = np.std(data)
  for i in data:
    z_score = (i-mean)/std
  return z_score

outliers=[]
def detect_outliers(data):
  threshold = 3
  mean = np.mean(data)
  std = np.std(data)

  for i in data:
    z_score = (i-mean)/std
    if np.abs(z_score)>threshold:
      outliers.append(i)
      return outliers

z_scores = zscore(df['first_ings_wkts'])
df['Sales_Z_Score'] = z_scores

# Filter outliers based on Z-score
outliers = df[(df['Sales_Z_Score'] > 3) | (df['Sales_Z_Score'] < -3)]
print(outliers)

"""**As we can see,our index list is empty, which means there is no outlier in this dataset for these column values**"""

#7
team_performance= df.groupby(['team1','team2','player_of_the_match','match_winner','venue'])['stage'].apply(list).reset_index().head(10)
# (['Department', 'Manager'])['Project'].apply(list).reset_index()

print(team_performance.to_string())

df.info()

#8

# bowling = df.loc['player_of_the_match']==df.loc['top_scorer']
player_performance= df.groupby(['highscore','team1','team2','player_of_the_match','match_winner','venue','top_scorer','best_bowling_figure','best_bowling'])['stage'].apply(list).reset_index()
# (['Department', 'Manager'])['Project'].apply(list).reset_index()
print(player_performance.to_string())

"""#9
from the grouped data, we can see:

*  Quinton de Kock was player of the match, as he scored 140 and Lucknow won in Dr DY Patil Sports Academy, Mumbai.

*   Mohsin Khan also took astonishing bowling figire of 3--20 on to his name in the group stages.




"""